	MYCODE SEGMENT 'CODE'
	ASSUME CS:MYCODE, DS:MYCODE
	START:
; Данные
	DTSEG SEGMENT 'DATA'  
	NUM DB '0000$'
	HEX DB '0123456789ABCDEF'
	DTSEG ENDS

; Программа
	MOV AX, DTSEG
	MOV DS, AX
	PUSH DS
	POP ES
	
	CALL CLRSCR
	
	PROG:
	LEA SI, NUM		
	MOV CX, 4
	
	INPUT:
	CALL GETCH
	
	CHECKNUMBER:
	CMP AL, '*'
	JE ENDPROG
	CMP AL, '0'
	JL INPUT
	CMP AL, '9'
	JG CHECKLETTER1
	MOV DL, AL
	CALL PUTCH
	SUB AL, 48
	JMP CORRECT
	
	CHECKLETTER1:
	CMP AL, 'A'
	JL INPUT
	CMP AL, 'F'
	JG CHECKLETTER2
	MOV DL, AL
	CALL PUTCH
	SUB AL, 55
	JMP CORRECT
	
	CHECKLETTER2:
	CMP AL, 'a'
	JL INPUT
	CMP AL, 'f'
	JG INPUT
	MOV AL, AL
	CALL PUTCH
	SUB AL, 87
	
	CORRECT:
	MOV [SI], AL
	INC SI
	LOOP INPUT
	
	LEA SI, NUM
	MOV BX, 0
	XOR AX, AX
	MOV CX, 4
	
	WRTOAX:
	MOV DX, 10H
	MOV BL, [SI]
	MUL DX
	ADD AX, BX
	INC SI
	LOOP WRTOAX
	
	PUSH AX
	
	BPR:
	MOV DL, ' '
	CALL PUTCH
	MOV DL, ' '
	CALL PUTCH
	MOV DL, ' '
	CALL PUTCH
	LEA SI, NUM
	MOV CX, 4
	POP AX
	JMP PR
	
	PR:
	PUSH AX
	MOV AL, AH
	CALL NHEX
	POP AX
	PUSH AX
	CALL NHEX
	MOV DL, 'h'
	CALL PUTCH
	MOV DL, ' '
	CALL PUTCH
	MOV DL, '='
	CALL PUTCH
	MOV DL, ' '
	CALL PUTCH
	POP AX
	MOV CX, 0

	CONVERT:
	MOV DX, 0
	MOV BX, 10
	DIV BX
	PUSH DX
	INC CX
	CMP AX, 0
	JNE CONVERT
	
	OUTPUT:
	POP DX
	ADD DX, '0'
	CALL PUTCH
	LOOP OUTPUT
	
	MOV DL, 'd'
	CALL PUTCH
	CALL CLRSCR
	JMP PROG
         
; Завершение программы
	ENDPROG:
	CALL NEWSTR
	MOV AL, 0
	MOV AH, 4CH
 	INT 21H
 	
; Очистка экрана
	CLRSCR PROC
	MOV AX, 3
	INT 10H
	RET
	CLRSCR ENDP
	           
; Новая строка
	NEWSTR PROC
	MOV AH, 2
	MOV DL, 10
	INT 21H         
	MOV DL, 13
	INT 21H   
	RET
	NEWSTR ENDP

; Ввод
	GETCH PROC
	MOV AH, 1
	INT 21H
	RET
	GETCH ENDP

; Вывод          
	PUTCH PROC
	MOV AH, 2
	INT 21H
	RET	
 	PUTCH ENDP
 	
 	PUTSTR PROC
	MOV AH, 9
	INT 21H
	RET	
 	PUTSTR ENDP
 		
; Преобразование
	NHEX PROC
	LEA BX, HEX
 	PUSH AX
	SHR AL, 4
	XLAT
	MOV DX, AX
	CALL PUTCH
         	POP AX
     	PUSH AX
         	AND AL, 0FH 
	XLAT
	MOV DX, AX
	CALL PUTCH
	POP AX
	RET
	NHEX ENDP
	
	MYCODE ENDS
	END START